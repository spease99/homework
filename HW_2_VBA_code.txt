Sub sum_tickers_years()
    Dim lastrow As Long
    Dim start_price As Double
    Dim end_price As Double
    Dim ws As Worksheet
    
    delta_column = 10
    per_column = 11
    volm_column = 12
    
    
    For Each ws In ThisWorkbook.Worksheets
        ws.Activate
   
        'ws.Cells(1, 1) = 1 'this sets cell A1 of each sheet to "1"
    
        largest_loss_value = 0
        largest_loss_ticker = "Live_Life^3"
        largest_gain_value = -2
        largest_gain_ticker = "Live_Life^2"
        largest_volumn_value = -1
        largest_volumn_ticker = "Live Life"
        
        'lastrow = Cells(Rows.Count, ws).End(xlUp).Row
        lastrow = WorksheetFunction.CountA(Columns("A:A")) - 1
        
        current_sum = Cells(2, 7)
        start_price = Cells(2, 3)
        current_cat_num = 1
        Cells(1, 9) = "Ticker"
        Cells(1, volm_column) = "Total Stock Volumn"
        Cells(1, delta_column) = "Yearly Change"
        Cells(1, per_column) = "Percent Change"
        '#########################
        ' percent change = (close-open)/open
        '#########################
        
        For current_row = 2 To lastrow
            If start_price = 0 Then

            End If
            
            
            If Cells(current_row, 1) = Cells(current_row + 1, 1) Then  'Same ticker, do the house keeping
                current_sum = current_sum + Cells(current_row + 1, 7)
            Else 'New ticker symbol, write the stats for the current ticker
                end_price = Cells(current_row, 6)
                Cells(1 + current_cat_num, 9) = Cells(current_row - 1, 1)
                Cells(1 + current_cat_num, volm_column) = current_sum
                Cells(1 + current_cat_num, delta_column) = end_price - start_price
                If (end_price - start_price) > 0 Then
                    Cells(1 + current_cat_num, delta_column).Interior.Color = RGB(0, 255, 0)
                Else
                    Cells(1 + current_cat_num, delta_column).Interior.Color = RGB(255, 0, 0)
                End If
                
                If start_price <> 0 Then 'protect adjust divide by zero
                    Cells(1 + current_cat_num, per_column) = (end_price - start_price) / start_price
                    Cells(1 + current_cat_num, per_column).NumberFormat = "0.00%"
        
                    If ((end_price - start_price) / start_price > largest_gain_value) Then
                        largest_gain_value = (end_price - start_price) / start_price
                        largest_gain_ticker = Cells(current_row, 1)
                    End If
                                  
                    If ((end_price - start_price) / start_price < largest_loss_value) Then
                        largest_loss_value = (end_price - start_price) / start_price
                        largest_loss_ticker = Cells(current_row, 1)
                    End If
                        
                    If (current_sum > largest_volumn_value) Then
                        largest_volumn_value = current_sum
                        largest_volumn_ticker = Cells(current_row, 1)
                    End If
                Else  ' opening price was zero, protect from divide by zero
                    Cells(1 + current_cat_num, per_column) = "Nan"
                End If
                
                current_sum = Cells(current_row + 1, 7)
                current_cat_num = current_cat_num + 1
                start_price = Cells(current_row + 1, 3)
                
            End If
        Next

        Cells(2, 15) = "Greatest % Increase"
        Cells(3, 15) = "Greatest % Decrease"
        Cells(4, 15) = "Greatest Total Volumn"
        Cells(1, 16) = "Ticker"
        Cells(1, 17) = "Value"
        
        
        Cells(2, 17) = largest_gain_value
        Cells(2, 17).NumberFormat = "0.00%"
        Cells(2, 16) = largest_gain_ticker
        
        Cells(3, 17) = largest_loss_value
        Cells(3, 17).NumberFormat = "0.00%"
        Cells(3, 16) = largest_loss_ticker
        
        Cells(4, 17) = largest_volumn_value
        Cells(4, 16) = largest_volumn_ticker
    Next
    
End Sub
